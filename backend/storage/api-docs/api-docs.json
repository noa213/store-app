{
    "openapi": "3.0.0",
    "info": {
        "title": "Store App API",
        "description": "API documentation for Store App",
        "version": "1.0.0"
    },
    "paths": {
        "/api/drinks": {
            "get": {
                "tags": [
                    "Drinks"
                ],
                "summary": "Get all drinks",
                "operationId": "ddb6fc9531964572b2cab619fb082df6",
                "responses": {
                    "200": {
                        "description": "List of drinks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Sprite"
                                                    },
                                                    "ml": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 330
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 5
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-04T12:34:56Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-04T12:35:56Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Drinks"
                ],
                "summary": "Create a new drink",
                "operationId": "ccf1854dd665c58b07278c49d042d80f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "ml",
                                    "price",
                                    "user_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Coca-Cola"
                                    },
                                    "ml": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 6.5
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Drink created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Drink saved successful in the system."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/drinks/user/{userId}": {
            "get": {
                "tags": [
                    "Drinks"
                ],
                "summary": "Get drinks by user ID",
                "operationId": "39d9b296a8d1fa8fbcba588d326090c1",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Drinks for the given user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Pepsi Max"
                                                    },
                                                    "ml": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 500
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 7
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-01T15:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-05-02T15:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No drinks found for this user"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/drinks/{id}": {
            "get": {
                "tags": [
                    "Drinks"
                ],
                "summary": "Get a drink by ID",
                "operationId": "4364932f610ad439b39d26bb8d875c29",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the drink",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Drink data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Fanta"
                                                },
                                                "ml": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 250
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 6.5
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-04T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-04T11:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Drink not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Drinks"
                ],
                "summary": "Update an existing drink",
                "operationId": "4884736dfd258ebfea1b5093d62a06f2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the drink to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "ml",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Coca Cola Zero"
                                    },
                                    "ml": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 330
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 8.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Drink updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Drink updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Drink not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Drinks"
                ],
                "summary": "Delete a drink by ID",
                "operationId": "bf552220fd307b0f19abdfcdd510108b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the drink to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Drink deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Drink deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Drink not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Drink not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "List of all users"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "user"
                                    },
                                    "favs_ar": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string"
                                    },
                                    "favs_ar": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/user-info": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get authenticated user's info",
                "operationId": "ddfe352239001592345308e9e4928a31",
                "responses": {
                    "200": {
                        "description": "User info retrieved successfully"
                    },
                    "400": {
                        "description": "User has been deleted"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/decode-token": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Decode JWT token",
                "operationId": "f8210a5cf4b01a3ece8bff85d0b34b1e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "your.jwt.token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token decoded successfully"
                    },
                    "400": {
                        "description": "Invalid token"
                    }
                }
            }
        },
        "/api/users/{id}/role": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Change user role",
                "operationId": "d08baeb4f20cbe66164e3bac9e4b3c84",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "role"
                                ],
                                "properties": {
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "admin",
                                            "superadmin"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully"
                    },
                    "400": {
                        "description": "Invalid role or user trying to change own role"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/admins": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all admin users",
                "operationId": "62eb724f2ba7a5e67972eec7842592bc",
                "responses": {
                    "200": {
                        "description": "List of admins"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/regulars": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users with user role",
                "operationId": "3d6c676a053791397f31af654fa36adc",
                "responses": {
                    "200": {
                        "description": "List of users"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth-user-role": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get role of authenticated user",
                "operationId": "577031d7cf4b3f1c5fbb8edfb3ddf712",
                "responses": {
                    "200": {
                        "description": "Authenticated user role"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Drinks",
            "description": "Drinks"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}